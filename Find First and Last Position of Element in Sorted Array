Topics : Binary Search

link : https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

Note : 'for this problem we can use the Linear Search but the time complexity is O(N), so here we are using the Binary Search...

#code

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int [] arr={-1,-1};
        int len=nums.length;
        int fst=0;   //leftmost approach...
        int last=len-1;    
        while(fst<=last){
            int mid = fst+(last-fst)/2;
            if(nums[mid]==target){
                arr[0]=mid;
                last=mid-1;
            }
            else if(target<nums[mid]){
                last=mid-1;
            }
            else{
                fst=mid+1;
            }
        }
        fst=0;     //rightmost approach....
        last=len-1;
        while(fst<=last){
            int mid = fst+(last-fst)/2;
            if(nums[mid]==target){
                arr[1]=mid;
                fst=mid+1;
            }
            else if(target<nums[mid]){
                last=mid-1;
            }
            else{
                fst=mid+1;
            }
        }
        return arr;
    }
}

Time and Space : O(log N),O(1)
